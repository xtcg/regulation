from thefuzz import process

__all__ = ["get_db_info"]
Tier1 = {1:"美国联邦(US-Federal)",
        2:"欧洲经济委员会（ECE - United Nations）",
        3:"欧洲联盟（EC - European Union）",
        4:"NCAP(New Car Assessment Program)"}   

DB = {"美国联邦(US-Federal)":{"加州排放（California Code of Regulations - Division 3）":1,
                             "TP":2,
                             "40 CFR Parts":3,
                             "49 CFR Parts":7,
                             "49 CFR Part 571 - FMVSS":8,
                             "Others":10},
      "欧洲经济委员会（ECE - United Nations）":{"ECE":6},
      "欧洲联盟（EC - European Union）":{"EU":4,"EC":5},
      "NCAP(New Car Assessment Program)":{"Euro NCAP":9},}

ECE = {'R000': 1000, 'R001': 1001, 'R003': 1003, 'R004': 1004, 'R005': 1005, 'R006': 1006, 'R007': 1007, 'R008': 1008, 'R009': 1009, 'R010': 1010, 'R011': 1011, 'R012': 1012, 'R013': 1013, 'R014': 1014, 'R015': 1015, 'R016': 1016, 'R017': 1017, 'R018': 1018, 'R019': 1019, 'R020': 1020, 'R021': 1021, 'R022': 1022, 'R023': 1023, 'R024': 1024, 'R025': 1025, 'R026': 1026, 'R027': 1027, 'R028': 1028, 'R029': 1029, 'R030': 1030, 'R031': 1031, 'R032': 1032, 'R033': 1033, 'R034': 1034, 'R035': 1035, 'R036': 1036, 'R037': 1037, 'R038': 1038, 'R039': 1039, 'R040': 1040, 'R041': 1041, 'R042': 1042, 'R043': 1043, 'R044': 1044, 'R045': 1045, 'R046': 1046, 'R047': 1047, 'R048': 1048, 'R049': 1049, 'R050': 1050, 'R051': 1051, 'R052': 1052, 'R053': 1053, 'R054': 1054, 'R055': 1055, 'R056': 1056, 'R057': 1057, 'R058': 1058, 'R059': 1059, 'R060': 1060, 'R061': 1061, 'R062': 1062, 'R063': 1063, 'R064': 1064, 'R065': 1065, 'R066': 1066, 'R067': 1067, 'R068': 1068, 'R069': 1069, 'R070': 1070, 'R071': 1071, 'R072': 1072, 'R073': 1073, 'R074': 1074, 'R075': 1075, 'R076': 1076, 'R077': 1077, 'R078': 1078, 'R079': 1079, 'R080': 1080, 'R081': 1081, 'R082': 1082, 'R083': 1083, 'R084': 1084, 'R085': 1085, 'R086': 1086, 'R087': 1087, 'R088': 1088, 'R089': 1089, 'R090': 1090, 'R091': 1091, 'R092': 1092, 'R093': 1093, 'R094': 1094, 'R095': 1095, 'R096': 1096, 'R097': 1097, 'R098': 1098, 'R099': 1099, 'R100': 1100, 'R101': 1101, 'R102': 1102, 'R103': 1103, 'R104': 1104, 'R105': 1105, 'R106': 1106, 'R107': 1107, 'R108': 1108, 'R109': 1109, 'R110': 1110, 'R111': 1111, 'R112': 1112, 'R114': 1114, 'R115': 1115, 'R116': 1116, 'R117': 1117, 'R118': 1118, 'R119': 1119, 'R120': 1120, 'R121': 1121, 'R122': 1122, 'R123': 1123, 'R124': 1124, 'R125': 1125, 'R126': 1126, 'R127': 1127, 'R128': 1128, 'R129': 1129, 'R130': 1130, 'R131': 1131, 'R132': 1132, 'R133': 1133, 'R134': 1134, 'R135': 1135, 'R136': 1136, 'R137': 1137, 'R138': 1138, 'R139': 1139, 'R140': 1140, 'R141': 1141, 'R142': 1142, 'R143': 1143, 'R144': 1144, 'R145': 1145, 'R146': 1146, 'R147': 1147, 'R148': 1148, 'R149': 1149, 'R150': 1150, 'R151': 1151, 'R152': 1152, 'R153': 1153, 'R154': 1154, 'R155': 1155, 'R156': 1156, 'R157': 1157, 'R158': 1158, 'R159': 1159, 'R160': 1160, 'R161': 1161, 'R162': 1162, 'R163': 1163, 'R164': 1164, 'R165': 1165, 'R166': 1166, 'R167': 1167, 'R168': 1168, 'R171': 1171}
def get_db_tier1():
    res = {'title':[]}
    for key in Tier1:
        res['title'].append({'name':Tier1[key],'id':key})
    return res


def get_db_info(info_str: int = 0):
    res = {'content':[]}
    if info_str == 0:
        for key in DB:
            if DB[key]:
                for k in DB[key]:
                    v = DB[key][k]
                    res['content'].append({'name':k,'id':v})
    else:
        if info_str not in Tier1:
            raise BadRequest(f"db_info no found for  {info_str}")
        db_str = Tier1[info_str]
        for k in DB[db_str]:
            v = DB[db_str][k]
            res['content'].append({'name':k,'id':v})
        if info_str == 2:
            for k in ECE:
                v = ECE[k]
                res['content'].append({'name':k,'id':v})
            # print(res)
    return res

def searchdb(info: str=''):
    temp = dict()
    for key in DB:
            if DB[key]:
                for k in DB[key]:
                    v = DB[key][k]
                    temp[k] = v
    ranked = process.extract(info, list(temp.keys()),limit=5)
    res = {'title':[]}
    for a,b in ranked:
        res['title'].append({'name':a,'id':temp[a]})
    return res